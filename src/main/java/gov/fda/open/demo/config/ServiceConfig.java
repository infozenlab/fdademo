/** * ********************************************************************* * Copyright (c) 2015 InfoZen, Inc. All rights reserved. InfoZen * PROPRIETARY/CONFIDENTIAL. Usage is subject to license terms. * ********************************************************************* */package gov.fda.open.demo.config;import org.springframework.beans.factory.annotation.Value;import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.ComponentScan;import org.springframework.context.annotation.Configuration;import org.springframework.core.io.ClassPathResource;import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;import org.springframework.web.client.RestTemplate;/** * Spring Java configuration object for service layer. */@Configuration@ComponentScan(basePackages = { "gov.fda.open.demo.service", "gov.fda.open.demo.repo" })class ServiceConfig {    @Value("${http.readtimeout:180000}")    private int readTimeout;    @Value("${http.connecttimeout:180000}")    private int connectTimeout;    /**     * Gets the rest template.     *     * @return the rest template     */    @Bean    public RestTemplate getRestTemplate() {        HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory();        requestFactory.setConnectTimeout(connectTimeout);        requestFactory.setReadTimeout(readTimeout);        // Create a Rest template        return new RestTemplate(requestFactory);    }    /**     * Property placeholder configurer.     *     * @return the property placeholder configurer     */    @Bean    public static PropertyPlaceholderConfigurer propertyPlaceholderConfigurer() {        PropertyPlaceholderConfigurer ppc = new PropertyPlaceholderConfigurer();        ppc.setLocation(new ClassPathResource("/persistence.properties"));        return ppc;    }}